KISSY.add('kg/progressbar/2.0.0/index',[],function(S ,require, exports, module) {function t(t,e){t=t||{};for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r]);return t}function e(t){return"string"==typeof t||t instanceof String}function r(t){return"function"==typeof t}var o={easeIn:"easeInCubic",easeOut:"easeOutCubic",easeInOut:"easeInOutCubic"},n=function(t,r){if(0!==arguments.length){var o,n=this._createSvgView(r);o=e(t)?document.querySelector(t):t,o.appendChild(n.svg),this._path=new p(n.path,r)}};n.prototype.animate=function(t,e,r){this._path.stop(),this._path.animate(t,e,r)},n.prototype.stop=function(){this._path.stop()},n.prototype.set=function(t){this._path.set(t)},n.prototype._createSvgView=function(e){e=t({color:"#555",strokeWidth:1,trailColor:null,fill:null},e);var r=document.createElementNS("http://www.w3.org/2000/svg","svg");if(this._initializeSvg(r,e),e.trailColor){var o=t({},e);o.color=e.trailColor,e.fill=null;var n=this._createPath(o);r.appendChild(n)}var i=this._createPath(e);return r.appendChild(i),{svg:r,path:i}},n.prototype._initializeSvg=function(t){t.setAttribute("viewBox","0 0 100 100")},n.prototype._createPath=function(t){var e=document.createElementNS("http://www.w3.org/2000/svg","path");return e.setAttributeNS(null,"d",this._pathString(t)),e.setAttributeNS(null,"stroke",t.color),e.setAttributeNS(null,"stroke-width",t.strokeWidth),t.fill?e.setAttributeNS(null,"fill",t.fill):e.setAttributeNS(null,"fill-opacity","0"),e},n.prototype._pathString=function(){throw new Error("Override this function for each progress bar")};var i=function(){n.apply(this,arguments)};i.prototype=new n,i.prototype.constructor=i,i.prototype._initializeSvg=function(t,e){t.setAttribute("viewBox","0 0 100 "+e.strokeWidth),t.setAttribute("preserveAspectRatio","none")},i.prototype._pathString=function(t){var e="M 0,{c} L 100,{c}",r=t.strokeWidth/2;return e=e.replace(/\{c\}/g,r)};var s=function(){n.apply(this,arguments)};s.prototype=new n,s.prototype.constructor=s,s.prototype._pathString=function(t){var e="M 50,50 m 0,-{r} a {r},{r} 0 1 1 0,{r*2} a {r},{r} 0 1 1 0,-{r*2}",r=50-t.strokeWidth/2;return e=e.replace(/\{r\}/g,r),e=e.replace(/\{r\*2\}/g,2*r)};var a=function(){n.apply(this,arguments)};a.prototype=new n,a.prototype.constructor=a,a.prototype._pathString=function(t){var e="M 0,{s/2} L {w},{s/2} L {w},{w} L {s/2},{w} L {s/2},{s}",r=100-t.strokeWidth/2;return e=e.replace(/\{w\}/g,r),e=e.replace(/\{s\}/g,t.strokeWidth),e=e.replace(/\{s\/2\}/g,t.strokeWidth/2)};var p=function(e,r){r=t({duration:800,easing:"linear"},r),this._path=e,this._opts=r,this._tweenable=null;var o=this._path.getTotalLength();this._path.style.strokeDasharray=o+" "+o,this._path.style.strokeDashoffset=o};p.prototype.set=function(t){this.stop();var e=this._path.getTotalLength();this._path.style.strokeDashoffset=e-t*e},p.prototype.stop=function(){this._stopTween();var t=window.getComputedStyle(this._path,null),e=t.getPropertyValue("stroke-dashoffset");this._path.style.strokeDashoffset=e},p.prototype.animate=function(e,o,n){r(o)&&(n=o,o={});var i=t({},this._opts);o=t(i,o),this.stop(),this._path.getBoundingClientRect();var s=window.getComputedStyle(this._path,null),a=s.getPropertyValue("stroke-dashoffset");a=parseFloat(a,10);var p=this._path.getTotalLength(),h=p-e*p,l=this._path;this._tweenable=new Tweenable,this._tweenable.tween({from:{offset:a},to:{offset:h},duration:o.duration,easing:this._easing(o.easing),step:function(t){l.style.strokeDashoffset=t.offset},finish:function(t){l.style.strokeDashoffset=t.offset,r(n)&&n()}})},p.prototype._stopTween=function(){null!==this._tweenable&&(this._tweenable.stop(),this._tweenable.dispose(),this._tweenable=null)},p.prototype._easing=function(t){return o.hasOwnProperty(t)?o[t]:t};var h={Line:i,Circle:s,Square:a};module.exports=h;});